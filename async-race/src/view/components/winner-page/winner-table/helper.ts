import { WinnerTableSortFnsType, WinnerTableType } from './types';

export const headerRowItemCreator = (
  title: string,
  classList: string[],
  child?: HTMLElement
): HTMLElement => {
  const th = document.createElement('th');
  th.classList.add(...classList);
  if (child) {
    const childCopy = child;
    th.append(childCopy);
    childCopy.textContent = title;
  } else {
    th.textContent = title;
  }
  return th;
};

export const rowTableItemCreator = (
  number: string,
  winner: WinnerTableType
): HTMLElement => {
  const row = document.createElement('tr');
  row.classList.add('winner-table__cell');

  const numberTd = document.createElement('td');
  numberTd.classList.add('winner-table__cell');
  numberTd.textContent = number;

  const colorTd = document.createElement('td');
  colorTd.classList.add('winner-table__cell', 'winner-table__cell_color');
  colorTd.innerHTML = `<svg width="99" height="37" viewBox="0 0 99 37"  xmlns="http://www.w3.org/2000/svg">
    <g id="car">
      <path d="M81.6902 21.156C85.8142 21.156 89.1582 24.499 89.1582 28.624C89.1582 28.942 89.1322 29.255 89.0922 29.562C88.6292 33.243 85.4962 36.09 81.6912 36.09C77.7832 36.09 74.5792 33.086 74.2542 29.26C74.2372 29.051 74.2232 28.838 74.2232 28.623C74.2222 24.499 77.5652 21.156 81.6902 21.156ZM85.4282 25.81L83.9062 27.333C84.0242 27.536 84.1172 27.755 84.1772 27.989H86.3232C86.2132 27.177 85.9022 26.435 85.4282 25.81ZM86.3332 29.282H84.1702C84.1092 29.512 84.0192 29.73 83.8992 29.93L85.4252 31.455C85.8982 30.835 86.2162 30.093 86.3332 29.282ZM82.3362 33.263C83.1452 33.15 83.8802 32.833 84.5022 32.364L82.9842 30.845C82.7842 30.962 82.5652 31.048 82.3362 31.108V33.263ZM82.3362 26.14C82.5712 26.202 82.7912 26.294 82.9962 26.415L84.5172 24.894C83.8922 24.419 83.1502 24.105 82.3362 23.992V26.14ZM81.0432 23.99C80.2292 24.103 79.4862 24.419 78.8622 24.893L80.3822 26.414C80.5862 26.293 80.8082 26.201 81.0422 26.139L81.0432 23.99ZM81.0432 33.261V31.109C80.8132 31.048 80.5962 30.963 80.3962 30.845L78.8772 32.364C79.4992 32.833 80.2352 33.148 81.0432 33.261ZM77.9512 31.462L79.4822 29.929C79.3622 29.728 79.2652 29.513 79.2042 29.283H77.0582C77.1722 30.091 77.4772 30.839 77.9512 31.462ZM79.2012 27.989C79.2622 27.755 79.3542 27.536 79.4722 27.333L77.9482 25.81C77.4772 26.435 77.1662 27.177 77.0542 27.99H79.2012V27.989Z"/>
      <path d="M19.6814 21.156C23.8054 21.156 27.1494 24.499 27.1494 28.624C27.1494 28.942 27.1234 29.255 27.0834 29.562C26.6204 33.243 23.4874 36.09 19.6834 36.09C15.7754 36.09 12.5714 33.086 12.2454 29.26C12.2284 29.051 12.2144 28.838 12.2144 28.623C12.2124 24.499 15.5564 21.156 19.6814 21.156ZM23.4194 25.81L21.8984 27.333C22.0164 27.536 22.1094 27.755 22.1694 27.989H24.3154C24.2044 27.177 23.8934 26.435 23.4194 25.81ZM24.3234 29.282H22.1604C22.0994 29.512 22.0094 29.73 21.8894 29.93L23.4144 31.455C23.8894 30.835 24.2084 30.093 24.3234 29.282ZM20.3274 33.263C21.1364 33.15 21.8714 32.833 22.4934 32.364L20.9754 30.845C20.7754 30.962 20.5564 31.048 20.3274 31.108V33.263ZM20.3274 26.14C20.5624 26.202 20.7824 26.294 20.9874 26.415L22.5084 24.894C21.8834 24.419 21.1424 24.105 20.3274 23.992V26.14ZM19.0334 23.99C18.2194 24.103 17.4764 24.419 16.8524 24.893L18.3734 26.414C18.5774 26.293 18.7994 26.199 19.0334 26.139V23.99ZM19.0334 33.261V31.109C18.8034 31.048 18.5864 30.963 18.3864 30.845L16.8674 32.364C17.4894 32.833 18.2264 33.148 19.0334 33.261ZM15.9424 31.462L17.4734 29.931C17.3534 29.729 17.2554 29.515 17.1954 29.284H15.0494C15.1634 30.091 15.4674 30.839 15.9424 31.462ZM17.1924 27.989C17.2534 27.755 17.3444 27.536 17.4634 27.333L15.9404 25.81C15.4684 26.435 15.1584 27.177 15.0454 27.99H17.1924V27.989Z"/>
      <path d="M1.74924 17.2899V11.7639C1.74924 10.8749 2.39524 10.1219 3.27324 9.98495C5.38024 9.65495 9.11524 9.03195 10.7932 8.51495C13.1992 7.77295 22.4952 3.83695 25.7142 3.09795C28.9342 2.35895 43.4522 -1.58705 57.3572 3.23295C59.7102 4.04795 70.2952 9.10794 76.5192 11.7389C78.3522 11.7789 96.4952 15.5609 97.4612 18.1529C98.4272 20.7459 98.7302 22.0039 98.9082 22.6619C99.0862 23.3199 98.9082 26.4689 97.5602 28.6619C96.1862 29.4389 93.5412 29.9609 90.4832 30.3109C90.5182 30.1239 90.5562 29.9399 90.5802 29.7509C90.6332 29.3469 90.6582 28.9779 90.6582 28.6259C90.6582 23.6809 86.6362 19.6569 81.6902 19.6569C76.7442 19.6569 72.7222 23.6799 72.7222 28.6259C72.7222 28.8799 72.7392 29.1319 72.7582 29.3799C72.8052 29.9349 72.9052 30.4739 73.0502 30.9929C73.0432 30.9929 73.0262 30.9929 73.0262 30.9929L28.5102 30.0969C28.5302 29.9819 28.5562 29.8679 28.5712 29.7509C28.6242 29.3489 28.6492 28.9789 28.6492 28.6259C28.6492 23.6809 24.6272 19.6579 19.6812 19.6579C14.7352 19.6579 10.7122 23.6799 10.7122 28.6259C10.7122 28.6449 10.7142 28.6609 10.7152 28.6789L10.5252 28.6629L2.91424 27.2299C2.91424 27.2299 -0.000762939 25.6779 -0.000762939 21.4079C-0.00176294 18.5599 1.74924 17.2899 1.74924 17.2899ZM45.9082 12.0509L62.5332 12.5599C62.2272 10.0689 63.7022 9.50994 63.7022 9.50994C57.0932 3.51094 43.7732 3.30795 43.7732 3.30795L45.9082 12.0509ZM27.2502 11.2899L42.4002 11.7989L41.0272 3.30894C33.1972 3.20694 28.7242 4.93495 28.7242 4.93495L26.4872 8.54494L27.2502 11.2899ZM18.7092 11.2379H22.9302L27.1502 5.44295C23.9842 6.70295 21.4502 7.94495 19.9412 8.72995C19.0252 9.20595 18.5252 10.2229 18.7092 11.2379Z"/>
    </g>
    </svg>`;
  colorTd.style.fill = winner.color;

  const nameTd = document.createElement('td');
  nameTd.classList.add('winner-table__cell');
  nameTd.textContent = winner.name;

  const winsTd = document.createElement('td');
  winsTd.classList.add('winner-table__cell');
  winsTd.textContent = String(winner.wins);

  const bestTimeTd = document.createElement('td');
  bestTimeTd.classList.add('winner-table__cell');
  bestTimeTd.textContent = String(winner.bestTime);

  row.append(numberTd, colorTd, nameTd, winsTd, bestTimeTd);
  return row;
};

export const sortingFns: WinnerTableSortFnsType = {
  sortWinsUp: (a, b) => a.wins - b.wins,
  sortWinsDown: (a, b) => b.wins - a.wins,
  sortBestTimeUp: (a, b) => a.bestTime - b.bestTime,
  sortBestTimeDown: (a, b) => b.bestTime - a.bestTime,
};
